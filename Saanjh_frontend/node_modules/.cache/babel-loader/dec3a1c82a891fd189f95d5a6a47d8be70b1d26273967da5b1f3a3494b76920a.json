{"ast":null,"code":"var _jsxFileName = \"E:\\\\SaanjhSahaayak\\\\temp\\\\tempo\\\\src\\\\api\\\\services\\\\huggingfaceServices.js\";\n// import { HfInference } from \"npm:@huggingface/inference\"\nimport { HfInference } from '@huggingface/inference';\nimport HuggingFaceComponent from '../../rando';\n\n// Initialize HfInference\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst hf = new HfInference('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');\n\n// Function to generate text using the BioMistral 7B model\nexport const generateText = async (prompt, maxTokens = 50) => {\n  try {\n    // Use hf instance to generate text\n    const response = await hf.generate({\n      modelId: 'BioMistral/BioMistral-7B',\n      prompt,\n      maxTokens\n    });\n    /*#__PURE__*/_jsxDEV(HuggingFaceComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error generating text:', error);\n  }\n};","map":{"version":3,"names":["HfInference","HuggingFaceComponent","jsxDEV","_jsxDEV","hf","generateText","prompt","maxTokens","response","generate","modelId","fileName","_jsxFileName","lineNumber","columnNumber","data","error","Error"],"sources":["E:/SaanjhSahaayak/temp/tempo/src/api/services/huggingfaceServices.js"],"sourcesContent":["\r\n// import { HfInference } from \"npm:@huggingface/inference\"\r\nimport { HfInference } from '@huggingface/inference'\r\nimport HuggingFaceComponent from '../../rando';\r\n\r\n// Initialize HfInference\r\nconst hf = new HfInference('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')\r\n\r\n// Function to generate text using the BioMistral 7B model\r\nexport const generateText = async (prompt, maxTokens = 50) => {\r\n  try {\r\n    // Use hf instance to generate text\r\n    const response = await hf.generate({\r\n      modelId: 'BioMistral/BioMistral-7B',\r\n      prompt,\r\n      maxTokens,\r\n    });\r\n    <HuggingFaceComponent/>\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Error generating text:', error);\r\n  }\r\n};\r\n"],"mappings":";AACA;AACA,SAASA,WAAW,QAAQ,wBAAwB;AACpD,OAAOC,oBAAoB,MAAM,aAAa;;AAE9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,EAAE,GAAG,IAAIJ,WAAW,CAAC,uCAAuC,CAAC;;AAEnE;AACA,OAAO,MAAMK,YAAY,GAAG,MAAAA,CAAOC,MAAM,EAAEC,SAAS,GAAG,EAAE,KAAK;EAC5D,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMJ,EAAE,CAACK,QAAQ,CAAC;MACjCC,OAAO,EAAE,0BAA0B;MACnCJ,MAAM;MACNC;IACF,CAAC,CAAC;IACF,aAAAJ,OAAA,CAACF,oBAAoB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;IAEvB,OAAON,QAAQ,CAACO,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,EAAED,KAAK,CAAC;EAClD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}