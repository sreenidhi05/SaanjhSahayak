{"ast":null,"code":"var _jsxFileName = \"E:\\\\SaanjhSahayak\\\\Saanjh_frontend\\\\src\\\\components\\\\EditableForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useMutation } from '@tanstack/react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst makeRequestAPI = async prompt => {\n  const response = await axios.post('http://localhost:8080/diagnose', {\n    prompt\n  });\n  return response.data;\n};\nconst EditableForm = ({\n  initialData\n}) => {\n  _s();\n  const [formData, setFormData] = useState(initialData || {});\n  const [isEditing, setIsEditing] = useState(false);\n  const [diagnosisReport, setDiagnosisReport] = useState(null);\n  useEffect(() => {\n    setFormData(initialData);\n  }, [initialData]);\n  const handleInputChange = (e, path) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const updatedFormData = {\n      ...formData\n    };\n    let nested = updatedFormData;\n    for (let i = 0; i < path.length - 1; i++) {\n      nested = nested[path[i]];\n    }\n    nested[path[path.length - 1]] = value;\n    setFormData(updatedFormData);\n  };\n  const renderFields = (data, path = []) => {\n    return Object.keys(data).map(key => {\n      const value = data[key];\n      const currentPath = [...path, key];\n      if (typeof value === 'object' && value !== null) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            style: {\n              display: 'block',\n              marginTop: '10px',\n              marginBottom: '5px'\n            },\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), renderFields(value, currentPath)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            marginBottom: '10px',\n            fontSize: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center',\n              justifyContent: 'center',\n              width: '150px',\n              color: 'black',\n              fontWeight: '400',\n              backgroundColor: 'skyblue',\n              borderRadius: '6px',\n              padding: '4px'\n            },\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              paddingLeft: '1rem',\n              backgroundColor: 'ButtonHighlight',\n              borderRadius: '6px',\n              paddingTop: '4px'\n            },\n            children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: key,\n              value: value,\n              onChange: e => handleInputChange(e, currentPath),\n              style: {\n                width: '100%',\n                backgroundColor: 'ButtonHighlight'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n  const mutation = useMutation({\n    mutationFn: makeRequestAPI,\n    mutationKey: ['gemini-ai-request']\n  });\n  const submitHandler = e => {\n    e.preventDefault();\n    const prompt = JSON.stringify(formData);\n    mutation.mutate(prompt);\n  };\n  const handleSave = async () => {\n    try {\n      const response = await axios.post('http://localhost:8080/save', formData);\n      console.log('Save response:', response.data);\n      setIsEditing(false);\n    } catch (error) {\n      console.error('Error saving data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginBottom: '20px',\n        fontSize: '2.5rem',\n        fontWeight: '800',\n        color: '#2563eb',\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [\"Report Details\", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          width: 40,\n          src: \"https://res.cloudinary.com/duwadnxwf/image/upload/v1716300380/patient_u29wkb.png\",\n          alt: \"patient icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: renderFields(formData)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        style: {\n          marginRight: '10px',\n          padding: '10px 20px',\n          backgroundColor: '#2563eb',\n          color: 'white',\n          borderRadius: '8px',\n          cursor: 'pointer'\n        },\n        onClick: () => setIsEditing(!isEditing),\n        children: [!isEditing && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://res.cloudinary.com/duwadnxwf/image/upload/v1716276383/icons8-edit-24_fpgba3.png\",\n          style: {\n            height: '24px',\n            marginRight: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 26\n        }, this), isEditing ? 'Cancel' : 'Edit']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        style: {\n          marginRight: '10px',\n          padding: '10px 20px',\n          backgroundColor: '#2563eb',\n          color: 'white',\n          borderRadius: '8px',\n          cursor: 'pointer'\n        },\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), !isEditing && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        style: {\n          display: 'inline'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#2563eb',\n            color: 'white',\n            borderRadius: '8px',\n            cursor: 'pointer'\n          },\n          children: \"Diagnose\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), mutation.isPending && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Generating your content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 30\n    }, this), mutation.isError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: mutation.error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 28\n    }, this), mutation.isSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: mutation.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(EditableForm, \"ibiG0WzCGSpb9n6lqW1ovpM+nIM=\", false, function () {\n  return [useMutation];\n});\n_c = EditableForm;\nexport default EditableForm;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useMutation } from '@tanstack/react-query';\n\n// const makeRequestAPI = async (prompt) => {\n//   const response = await axios.post('http://localhost:8080/diagnose', { prompt });\n//   return response.data;\n// };\n\n// const EditableForm = ({ initialData }) => {\n//   const [formData, setFormData] = useState(initialData || {});\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [diagnosisReport, setDiagnosisReport] = useState(null);\n\n//   useEffect(() => {\n//     setFormData(initialData);\n//   }, [initialData]);\n\n//   const handleInputChange = (e, path) => {\n//     const { name, value } = e.target;\n//     const updatedFormData = { ...formData };\n\n//     let nested = updatedFormData;\n//     for (let i = 0; i < path.length - 1; i++) {\n//       nested = nested[path[i]];\n//     }\n//     nested[path[path.length - 1]] = value;\n\n//     setFormData(updatedFormData);\n//   };\n\n//   const renderFields = (data, path = []) => {\n//     return Object.keys(data).map((key) => {\n//       const value = data[key];\n//       const currentPath = [...path, key];\n\n//       if (typeof value === 'object' && value !== null) {\n//         return (\n//           <div key={key}>\n//             <strong style={{ display: 'block', marginTop: '10px', marginBottom: '5px' }}>{key}</strong>\n//             {renderFields(value, currentPath)}\n//           </div>\n//         );\n//       } else {\n//         return (\n//           <div key={key} style={{ display: 'flex', marginBottom: '10px', fontSize: '15px' }}>\n//             <div style={{ textAlign: 'center', justifyContent: 'center', width: '150px', color: 'black', fontWeight: '400', backgroundColor: 'skyblue', borderRadius: '6px', padding: '4px' }}>\n//               {key}\n//             </div>\n//             <div style={{ flex: 1, paddingLeft: '1rem', backgroundColor: 'ButtonHighlight', borderRadius: '6px', paddingTop: '4px' }}>\n//               {isEditing ? (\n//                 <input\n//                   type=\"text\"\n//                   name={key}\n//                   value={value}\n//                   onChange={(e) => handleInputChange(e, currentPath)}\n//                   style={{ width: '800px', backgroundColor: 'ButtonHighlight' }}\n//                 />\n//               ) : (\n//                 <span>{value}</span>\n//               )}\n//             </div>\n//           </div>\n//         );\n//       }\n//     });\n//   };\n\n//   const mutation = useMutation({\n//     mutationFn: makeRequestAPI,\n//     mutationKey: ['gemini-ai-request']\n//   });\n\n//   const submitHandler = (e) => {\n//     e.preventDefault();\n//     const prompt = JSON.stringify(formData);\n//     mutation.mutate(prompt);\n//   };\n//   const handleSave = async () => {\n//     try {\n//       const response = await axios.post('http://localhost:8080/save', formData);\n//       console.log('Save response:', response.data);\n//       setIsEditing(false);\n//     } catch (error) {\n//       console.error('Error saving data:', error);\n//     }\n//   };\n\n//   return (\n//     <div className='pl-10 pr-10'>\n//       <h1 className=\"mb-4 text-3xl font-extrabold text-blue-600 md:text-5xl lg:text-5xl pb-2 flex items-center\">\n//         Report Details\n//         <span className=\"ml-4\">\n//           <img width={40} src=\"https://res.cloudinary.com/duwadnxwf/image/upload/v1716300380/patient_u29wkb.png\" alt=\"patient icon\" />\n//         </span>\n//       </h1>\n\n//       {renderFields(formData)}\n\n//       <button\n//         type=\"button\"\n//         className=\"mt-3 text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br font-medium rounded-lg text-s px-4 py-2.5 text-center inline-flex items-center me-2 mb-2\"\n//         onClick={() => setIsEditing(!isEditing)}\n//       >\n//         {!isEditing && <img src=\"https://res.cloudinary.com/duwadnxwf/image/upload/v1716276383/icons8-edit-24_fpgba3.png\" className=\"h-6 w-5 pb-1\" />}\n//         {isEditing ? 'Cancel' : 'Edit'}\n//       </button>\n//       {isEditing &&\n//         <button type=\"button\"\n//           className=\"mt-3 mb-5 text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br font-medium rounded-lg text-s px-4 py-2.5 text-center inline-flex items-center me-2 mb-2\"\n//           onClick={handleSave}>Save</button>}\n\n//       {!isEditing &&\n//         <form onSubmit={submitHandler}>\n//           <button\n//             type=\"submit\"\n//             className=\"mt-3 mb-5 text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br font-medium rounded-lg text-s px-4 py-2.5 text-center inline-flex items-center me-2 mb-2\"\n//           >\n//             Diagnose\n//           </button>\n//         </form>\n//       }\n\n//       {mutation.isPending && <p>Generating your content</p>}\n//       {mutation.isError && <p>{mutation.error.message}</p>}\n//       {mutation.isSuccess && <p>{mutation.data}</p>}\n//     </div>\n//   );\n// };\n\n// export default EditableForm;\nvar _c;\n$RefreshReg$(_c, \"EditableForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","useMutation","jsxDEV","_jsxDEV","makeRequestAPI","prompt","response","post","data","EditableForm","initialData","_s","formData","setFormData","isEditing","setIsEditing","diagnosisReport","setDiagnosisReport","handleInputChange","e","path","name","value","target","updatedFormData","nested","i","length","renderFields","Object","keys","map","key","currentPath","children","style","display","marginTop","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","textAlign","justifyContent","width","color","fontWeight","backgroundColor","borderRadius","padding","flex","paddingLeft","paddingTop","type","onChange","mutation","mutationFn","mutationKey","submitHandler","preventDefault","JSON","stringify","mutate","handleSave","console","log","error","className","alignItems","marginLeft","src","alt","marginRight","cursor","onClick","height","onSubmit","isPending","isError","message","isSuccess","_c","$RefreshReg$"],"sources":["E:/SaanjhSahayak/Saanjh_frontend/src/components/EditableForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useMutation } from '@tanstack/react-query';\r\n\r\nconst makeRequestAPI = async (prompt) => {\r\n  const response = await axios.post('http://localhost:8080/diagnose', { prompt });\r\n  return response.data;\r\n};\r\n\r\nconst EditableForm = ({ initialData }) => {\r\n  const [formData, setFormData] = useState(initialData || {});\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [diagnosisReport, setDiagnosisReport] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setFormData(initialData);\r\n  }, [initialData]);\r\n\r\n  const handleInputChange = (e, path) => {\r\n    const { name, value } = e.target;\r\n    const updatedFormData = { ...formData };\r\n\r\n    let nested = updatedFormData;\r\n    for (let i = 0; i < path.length - 1; i++) {\r\n      nested = nested[path[i]];\r\n    }\r\n    nested[path[path.length - 1]] = value;\r\n\r\n    setFormData(updatedFormData);\r\n  };\r\n\r\n  const renderFields = (data, path = []) => {\r\n    return Object.keys(data).map((key) => {\r\n      const value = data[key];\r\n      const currentPath = [...path, key];\r\n\r\n      if (typeof value === 'object' && value !== null) {\r\n        return (\r\n          <div key={key}>\r\n            <strong style={{ display: 'block', marginTop: '10px', marginBottom: '5px' }}>{key}</strong>\r\n            {renderFields(value, currentPath)}\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div key={key} style={{ display: 'flex', marginBottom: '10px', fontSize: '15px' }}>\r\n            <div style={{ textAlign: 'center', justifyContent: 'center', width: '150px', color: 'black', fontWeight: '400', backgroundColor: 'skyblue', borderRadius: '6px', padding: '4px' }}>\r\n              {key}\r\n            </div>\r\n            <div style={{ flex: 1, paddingLeft: '1rem', backgroundColor: 'ButtonHighlight', borderRadius: '6px', paddingTop: '4px' }}>\r\n              {isEditing ? (\r\n                <input\r\n                  type=\"text\"\r\n                  name={key}\r\n                  value={value}\r\n                  onChange={(e) => handleInputChange(e, currentPath)}\r\n                  style={{ width: '100%', backgroundColor: 'ButtonHighlight' }}\r\n                />\r\n              ) : (\r\n                <span>{value}</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const mutation = useMutation({\r\n    mutationFn: makeRequestAPI,\r\n    mutationKey: ['gemini-ai-request']\r\n  });\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const prompt = JSON.stringify(formData);\r\n    mutation.mutate(prompt);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/save', formData);\r\n      console.log('Save response:', response.data);\r\n      setIsEditing(false);\r\n    } catch (error) {\r\n      console.error('Error saving data:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <h1 style={{ marginBottom: '20px', fontSize: '2.5rem', fontWeight: '800', color: '#2563eb', display: 'flex', alignItems: 'center' }}>\r\n        Report Details\r\n        <span style={{ marginLeft: '10px' }}>\r\n          <img width={40} src=\"https://res.cloudinary.com/duwadnxwf/image/upload/v1716300380/patient_u29wkb.png\" alt=\"patient icon\" />\r\n        </span>\r\n      </h1>\r\n\r\n      <div className='form-container'>\r\n        {renderFields(formData)}\r\n      </div>\r\n\r\n      <div className='button-container'>\r\n        <button\r\n          type=\"button\"\r\n          style={{ marginRight: '10px', padding: '10px 20px', backgroundColor: '#2563eb', color: 'white', borderRadius: '8px', cursor: 'pointer' }}\r\n          onClick={() => setIsEditing(!isEditing)}\r\n        >\r\n          {!isEditing && <img src=\"https://res.cloudinary.com/duwadnxwf/image/upload/v1716276383/icons8-edit-24_fpgba3.png\" style={{ height: '24px', marginRight: '5px' }} />}\r\n          {isEditing ? 'Cancel' : 'Edit'}\r\n        </button>\r\n        {isEditing &&\r\n          <button type=\"button\"\r\n            style={{ marginRight: '10px', padding: '10px 20px', backgroundColor: '#2563eb', color: 'white', borderRadius: '8px', cursor: 'pointer' }}\r\n            onClick={handleSave}>Save</button>\r\n        }\r\n\r\n        {!isEditing &&\r\n          <form onSubmit={submitHandler} style={{ display: 'inline' }}>\r\n            <button\r\n              type=\"submit\"\r\n              style={{ padding: '10px 20px', backgroundColor: '#2563eb', color: 'white', borderRadius: '8px', cursor: 'pointer' }}\r\n            >\r\n              Diagnose\r\n            </button>\r\n          </form>\r\n        }\r\n      </div>\r\n\r\n      {mutation.isPending && <p>Generating your content</p>}\r\n      {mutation.isError && <p>{mutation.error.message}</p>}\r\n      {mutation.isSuccess && <p>{mutation.data}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditableForm;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { useMutation } from '@tanstack/react-query';\r\n\r\n// const makeRequestAPI = async (prompt) => {\r\n//   const response = await axios.post('http://localhost:8080/diagnose', { prompt });\r\n//   return response.data;\r\n// };\r\n\r\n// const EditableForm = ({ initialData }) => {\r\n//   const [formData, setFormData] = useState(initialData || {});\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [diagnosisReport, setDiagnosisReport] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     setFormData(initialData);\r\n//   }, [initialData]);\r\n\r\n//   const handleInputChange = (e, path) => {\r\n//     const { name, value } = e.target;\r\n//     const updatedFormData = { ...formData };\r\n\r\n//     let nested = updatedFormData;\r\n//     for (let i = 0; i < path.length - 1; i++) {\r\n//       nested = nested[path[i]];\r\n//     }\r\n//     nested[path[path.length - 1]] = value;\r\n\r\n//     setFormData(updatedFormData);\r\n//   };\r\n\r\n//   const renderFields = (data, path = []) => {\r\n//     return Object.keys(data).map((key) => {\r\n//       const value = data[key];\r\n//       const currentPath = [...path, key];\r\n\r\n//       if (typeof value === 'object' && value !== null) {\r\n//         return (\r\n//           <div key={key}>\r\n//             <strong style={{ display: 'block', marginTop: '10px', marginBottom: '5px' }}>{key}</strong>\r\n//             {renderFields(value, currentPath)}\r\n//           </div>\r\n//         );\r\n//       } else {\r\n//         return (\r\n//           <div key={key} style={{ display: 'flex', marginBottom: '10px', fontSize: '15px' }}>\r\n//             <div style={{ textAlign: 'center', justifyContent: 'center', width: '150px', color: 'black', fontWeight: '400', backgroundColor: 'skyblue', borderRadius: '6px', padding: '4px' }}>\r\n//               {key}\r\n//             </div>\r\n//             <div style={{ flex: 1, paddingLeft: '1rem', backgroundColor: 'ButtonHighlight', borderRadius: '6px', paddingTop: '4px' }}>\r\n//               {isEditing ? (\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name={key}\r\n//                   value={value}\r\n//                   onChange={(e) => handleInputChange(e, currentPath)}\r\n//                   style={{ width: '800px', backgroundColor: 'ButtonHighlight' }}\r\n//                 />\r\n//               ) : (\r\n//                 <span>{value}</span>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         );\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   const mutation = useMutation({\r\n//     mutationFn: makeRequestAPI,\r\n//     mutationKey: ['gemini-ai-request']\r\n//   });\r\n\r\n//   const submitHandler = (e) => {\r\n//     e.preventDefault();\r\n//     const prompt = JSON.stringify(formData);\r\n//     mutation.mutate(prompt);\r\n//   };\r\n//   const handleSave = async () => {\r\n//     try {\r\n//       const response = await axios.post('http://localhost:8080/save', formData);\r\n//       console.log('Save response:', response.data);\r\n//       setIsEditing(false);\r\n//     } catch (error) {\r\n//       console.error('Error saving data:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className='pl-10 pr-10'>\r\n//       <h1 className=\"mb-4 text-3xl font-extrabold text-blue-600 md:text-5xl lg:text-5xl pb-2 flex items-center\">\r\n//         Report Details\r\n//         <span className=\"ml-4\">\r\n//           <img width={40} src=\"https://res.cloudinary.com/duwadnxwf/image/upload/v1716300380/patient_u29wkb.png\" alt=\"patient icon\" />\r\n//         </span>\r\n//       </h1>\r\n\r\n\r\n//       {renderFields(formData)}\r\n\r\n\r\n//       <button\r\n//         type=\"button\"\r\n//         className=\"mt-3 text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br font-medium rounded-lg text-s px-4 py-2.5 text-center inline-flex items-center me-2 mb-2\"\r\n//         onClick={() => setIsEditing(!isEditing)}\r\n//       >\r\n//         {!isEditing && <img src=\"https://res.cloudinary.com/duwadnxwf/image/upload/v1716276383/icons8-edit-24_fpgba3.png\" className=\"h-6 w-5 pb-1\" />}\r\n//         {isEditing ? 'Cancel' : 'Edit'}\r\n//       </button>\r\n//       {isEditing &&\r\n//         <button type=\"button\"\r\n//           className=\"mt-3 mb-5 text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br font-medium rounded-lg text-s px-4 py-2.5 text-center inline-flex items-center me-2 mb-2\"\r\n//           onClick={handleSave}>Save</button>}\r\n\r\n//       {!isEditing &&\r\n//         <form onSubmit={submitHandler}>\r\n//           <button\r\n//             type=\"submit\"\r\n//             className=\"mt-3 mb-5 text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br font-medium rounded-lg text-s px-4 py-2.5 text-center inline-flex items-center me-2 mb-2\"\r\n//           >\r\n//             Diagnose\r\n//           </button>\r\n//         </form>\r\n//       }\r\n\r\n//       {mutation.isPending && <p>Generating your content</p>}\r\n//       {mutation.isError && <p>{mutation.error.message}</p>}\r\n//       {mutation.isSuccess && <p>{mutation.data}</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EditableForm;"],"mappings":"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,WAAW;AAAA;AAAAkF,EAAA,GA3DxB1E,YAAY;AA+HlB,eAAeA,YAAY;;AAG3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA0E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}