{"ast":null,"code":"var _jsxFileName = \"E:\\\\SaanjhSahaayak\\\\temp\\\\tempo\\\\src\\\\rando.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { generateText } from './api/services/huggingfaceServices';\n\n// const MyComponent = () => {\n//   const [generatedText, setGeneratedText] = useState('');\n\n//   const handleGenerateText = async () => {\n//     try {\n//       const text = await generateText('Enter your prompt here');\n//       setGeneratedText(text);\n//     } catch (error) {\n//       console.error('Error generating text:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={handleGenerateText}>Generate Text</button>\n//       <p>{generatedText}</p>\n//     </div>\n//   );\n// };\n\n// export default MyComponent;\n\nimport React, { useState } from 'react';\nimport { generateText } from './api/services/huggingfaceServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyComponent = () => {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [generatedText, setGeneratedText] = useState('');\n  const [isLoading, setIsLoading] = useState(false); // Add state to track loading status\n\n  const handleGenerateText = async () => {\n    try {\n      setIsLoading(true); // Set loading status to true when generating text\n      const text = await generateText(prompt);\n      setGeneratedText(text);\n    } catch (error) {\n      console.error('Error generating text:', error);\n    } finally {\n      setIsLoading(false); // Set loading status back to false after text generation completes\n    }\n  };\n  const handleInputChange = e => {\n    setPrompt(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your prompt here\",\n      value: prompt,\n      onChange: handleInputChange,\n      disabled: isLoading // Disable input while loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateText,\n      disabled: isLoading,\n      children: isLoading ? 'Generating...' : 'Generate Text'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: generatedText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(MyComponent, \"S4JZwvEbzk3yJiy7KpJEOotn6AU=\");\n_c = MyComponent;\nexport default MyComponent;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","useState","generateText","jsxDEV","_jsxDEV","MyComponent","_s","prompt","setPrompt","generatedText","setGeneratedText","isLoading","setIsLoading","handleGenerateText","text","error","console","handleInputChange","e","target","value","children","type","placeholder","onChange","disabled","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/SaanjhSahaayak/temp/tempo/src/rando.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { generateText } from './api/services/huggingfaceServices';\r\n\r\n\r\n// const MyComponent = () => {\r\n//   const [generatedText, setGeneratedText] = useState('');\r\n\r\n//   const handleGenerateText = async () => {\r\n//     try {\r\n//       const text = await generateText('Enter your prompt here');\r\n//       setGeneratedText(text);\r\n//     } catch (error) {\r\n//       console.error('Error generating text:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <button onClick={handleGenerateText}>Generate Text</button>\r\n//       <p>{generatedText}</p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default MyComponent;\r\n\r\nimport React, { useState } from 'react';\r\nimport { generateText } from './api/services/huggingfaceServices';\r\n\r\nconst MyComponent = () => {\r\n  const [prompt, setPrompt] = useState('');\r\n  const [generatedText, setGeneratedText] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false); // Add state to track loading status\r\n\r\n  const handleGenerateText = async () => {\r\n    try {\r\n      setIsLoading(true); // Set loading status to true when generating text\r\n      const text = await generateText(prompt);\r\n      setGeneratedText(text);\r\n    } catch (error) {\r\n      console.error('Error generating text:', error);\r\n    } finally {\r\n      setIsLoading(false); // Set loading status back to false after text generation completes\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setPrompt(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter your prompt here\"\r\n        value={prompt}\r\n        onChange={handleInputChange}\r\n        disabled={isLoading} // Disable input while loading\r\n      />\r\n      <button onClick={handleGenerateText} disabled={isLoading}>\r\n        {isLoading ? 'Generating...' : 'Generate Text'}\r\n      </button>\r\n      <p>{generatedText}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyComponent;\r\n\r\n"],"mappings":";;AAAA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnD,MAAMY,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACFD,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;MACpB,MAAME,IAAI,GAAG,MAAMZ,YAAY,CAACK,MAAM,CAAC;MACvCG,gBAAgB,CAACI,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,SAAS;MACRH,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB;EACF,CAAC;EAED,MAAMK,iBAAiB,GAAIC,CAAC,IAAK;IAC/BV,SAAS,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;EAED,oBACEhB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,wBAAwB;MACpCH,KAAK,EAAEb,MAAO;MACdiB,QAAQ,EAAEP,iBAAkB;MAC5BQ,QAAQ,EAAEd,SAAU,CAAC;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eACFzB,OAAA;MAAQ0B,OAAO,EAAEjB,kBAAmB;MAACY,QAAQ,EAAEd,SAAU;MAAAU,QAAA,EACtDV,SAAS,GAAG,eAAe,GAAG;IAAe;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACTzB,OAAA;MAAAiB,QAAA,EAAIZ;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAACvB,EAAA,CApCID,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAsCjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}