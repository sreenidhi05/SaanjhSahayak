{"ast":null,"code":"var _jsxFileName = \"E:\\\\SaanjhSahaayak\\\\temp\\\\tempo\\\\src\\\\components\\\\chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [response, setResponse] = useState('');\n  const sendMessage = async () => {\n    try {\n      const requestBody = {\n        prompt: inputText,\n        max_tokens: 100,\n        temperature: 0.7,\n        // Adjust the temperature for creativity\n        stop: '\\n' // Stop generating tokens at newline character\n      };\n      const response = await axios.post('https://api.openai.com/v1/completions', requestBody, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer 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` // Replace YOUR_API_KEY with your actual API key\n        }\n      });\n      setResponse(response.data.choices[0].text.trim());\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputText,\n      onChange: e => setInputText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"Mo0GBVKU+f8lSL8udRItNYBP7eI=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chat","_s","inputText","setInputText","response","setResponse","sendMessage","requestBody","prompt","max_tokens","temperature","stop","post","headers","Authorization","data","choices","text","trim","error","console","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/SaanjhSahaayak/temp/tempo/src/components/chat.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Chat = () => {\r\n  const [inputText, setInputText] = useState('');\r\n  const [response, setResponse] = useState('');\r\n\r\n  const sendMessage = async () => {\r\n    try {\r\n      const requestBody = {\r\n        prompt: inputText,\r\n        max_tokens: 100,\r\n        temperature: 0.7, // Adjust the temperature for creativity\r\n        stop: '\\n', // Stop generating tokens at newline character\r\n      };\r\n\r\n      const response = await axios.post(\r\n        'https://api.openai.com/v1/completions',\r\n        requestBody,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer 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`, // Replace YOUR_API_KEY with your actual API key\r\n          },\r\n        }\r\n      );\r\n\r\n      setResponse(response.data.choices[0].text.trim());\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        value={inputText}\r\n        onChange={(e) => setInputText(e.target.value)}\r\n      />\r\n      <button onClick={sendMessage}>Send</button>\r\n      <div>{response}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,WAAW,GAAG;QAClBC,MAAM,EAAEN,SAAS;QACjBO,UAAU,EAAE,GAAG;QACfC,WAAW,EAAE,GAAG;QAAE;QAClBC,IAAI,EAAE,IAAI,CAAE;MACd,CAAC;MAED,MAAMP,QAAQ,GAAG,MAAMP,KAAK,CAACe,IAAI,CAC/B,uCAAuC,EACvCL,WAAW,EACX;QACEM,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAG,4DAA2D,CAAE;QAC/E;MACF,CACF,CAAC;MAEDT,WAAW,CAACD,QAAQ,CAACW,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;IACnD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBACEpB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAErB,SAAU;MACjBsB,QAAQ,EAAGC,CAAC,IAAKtB,YAAY,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACF/B,OAAA;MAAQgC,OAAO,EAAEzB,WAAY;MAAAe,QAAA,EAAC;IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3C/B,OAAA;MAAAsB,QAAA,EAAMjB;IAAQ;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAzCID,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AA2CV,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}