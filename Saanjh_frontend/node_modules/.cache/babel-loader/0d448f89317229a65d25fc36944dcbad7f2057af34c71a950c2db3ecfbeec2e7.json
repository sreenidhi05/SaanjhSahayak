{"ast":null,"code":"var _jsxFileName = \"E:\\\\TestSaanjhSahayak\\\\temp\\\\tempo\\\\src\\\\components\\\\chat.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const Chat = () => {\n//   const [inputText, setInputText] = useState('');\n//   const [response, setResponse] = useState('');\n\n//   const sendMessage = async () => {\n//     try {\n//       const requestBody = {\n//         prompt: inputText,\n//         max_tokens: 100,\n//         temperature: 0.7, // Adjust the temperature for creativity\n//         stop: '\\n', // Stop generating tokens at newline character\n//       };\n\n//       const response = await axios.post(\n//         'https://api.openai.com/v1/completions',\n//         requestBody,\n//         {\n//           headers: {\n//             'Content-Type': 'application/json',\n//             Authorization: `Bearer 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`, // Replace YOUR_API_KEY with your actual API key\n//           },\n//         }\n//       );\n\n//       setResponse(response.data.choices[0].text.trim());\n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <input\n//         type=\"text\"\n//         value={inputText}\n//         onChange={(e) => setInputText(e.target.value)}\n//       />\n//       <button onClick={sendMessage}>Send</button>\n//       <div>{response}</div>\n//     </div>\n//   );\n// };\n\n// export default Chat;\n\n// Chatbot.js\n\nimport React, { useState } from 'react';\nimport { OpenAI } from 'openai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const handleSendMessage = async () => {\n    const response = await OpenAI.chat.create({\n      messages: [...messages, {\n        role: 'system',\n        content: 'You are a helpful assistant.'\n      }, {\n        role: 'user',\n        content: input\n      }]\n    });\n    setMessages([...messages, {\n      role: 'user',\n      content: input\n    }, {\n      role: 'assistant',\n      content: response.choices[0].message.content\n    }]);\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.role}`,\n        children: message.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Type your message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","OpenAI","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","input","setInput","handleSendMessage","response","chat","create","role","content","choices","message","children","className","map","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["E:/TestSaanjhSahayak/temp/tempo/src/components/chat.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const Chat = () => {\r\n//   const [inputText, setInputText] = useState('');\r\n//   const [response, setResponse] = useState('');\r\n\r\n//   const sendMessage = async () => {\r\n//     try {\r\n//       const requestBody = {\r\n//         prompt: inputText,\r\n//         max_tokens: 100,\r\n//         temperature: 0.7, // Adjust the temperature for creativity\r\n//         stop: '\\n', // Stop generating tokens at newline character\r\n//       };\r\n\r\n//       const response = await axios.post(\r\n//         'https://api.openai.com/v1/completions',\r\n//         requestBody,\r\n//         {\r\n//           headers: {\r\n//             'Content-Type': 'application/json',\r\n//             Authorization: `Bearer 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`, // Replace YOUR_API_KEY with your actual API key\r\n//           },\r\n//         }\r\n//       );\r\n\r\n//       setResponse(response.data.choices[0].text.trim());\r\n//     } catch (error) {\r\n//       console.error('Error:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <input\r\n//         type=\"text\"\r\n//         value={inputText}\r\n//         onChange={(e) => setInputText(e.target.value)}\r\n//       />\r\n//       <button onClick={sendMessage}>Send</button>\r\n//       <div>{response}</div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Chat;\r\n\r\n\r\n\r\n\r\n\r\n// Chatbot.js\r\n\r\nimport React, { useState } from 'react';\r\nimport { OpenAI } from 'openai';\r\n\r\n\r\nconst Chat = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleSendMessage = async () => {\r\n    const response = await OpenAI.chat.create({\r\n      messages: [...messages, { role: 'system', content: 'You are a helpful assistant.' }, { role: 'user', content: input }],\r\n    });\r\n\r\n    setMessages([...messages, { role: 'user', content: input }, { role: 'assistant', content: response.choices[0].message.content }]);\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"chatbox\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className={`message ${message.role}`}>\r\n            {message.content}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        placeholder=\"Type your message...\"\r\n      />\r\n      <button onClick={handleSendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,MAAMC,QAAQ,GAAG,MAAMV,MAAM,CAACW,IAAI,CAACC,MAAM,CAAC;MACxCP,QAAQ,EAAE,CAAC,GAAGA,QAAQ,EAAE;QAAEQ,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAA+B,CAAC,EAAE;QAAED,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAEP;MAAM,CAAC;IACvH,CAAC,CAAC;IAEFD,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEQ,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAEP;IAAM,CAAC,EAAE;MAAEM,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAEJ,QAAQ,CAACK,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACF;IAAQ,CAAC,CAAC,CAAC;IACjIN,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACEN,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAKgB,SAAS,EAAC,SAAS;MAAAD,QAAA,EACrBZ,QAAQ,CAACc,GAAG,CAAC,CAACH,OAAO,EAAEI,KAAK,kBAC3BlB,OAAA;QAAiBgB,SAAS,EAAG,WAAUF,OAAO,CAACH,IAAK,EAAE;QAAAI,QAAA,EACnDD,OAAO,CAACF;MAAO,GADRM,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNtB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEnB,KAAM;MACboB,QAAQ,EAAGC,CAAC,IAAKpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,WAAW,EAAC;IAAsB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACFtB,OAAA;MAAQ6B,OAAO,EAAEtB,iBAAkB;MAAAQ,QAAA,EAAC;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAACpB,EAAA,CA/BID,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAiCV,eAAeA,IAAI;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}